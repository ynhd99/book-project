<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper   PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.example.room.dao.RoomCateDao">
    <!--新增图书分类信息-->
    <insert id="addRoomCate">
        insert into room_category
        (
        id,
        cate_code,
        cate_name,
        cate_desc,
        parent_id,
        create_time,
        create_user,
        update_time,
        update_user
        )values
        (
        #{id},
        #{cateCode},
        #{cateName},
        #{cateDesc},
        #{parentId},
        #{createTime},
        #{createUser},
        #{updateTime},
        #{updateUser}
        )
    </insert>
    <!--根据编码获取分类信息-->
    <select id="getBookCateByCode" parameterType="string" resultType="int">
        select count(id)
        from room_category
        <where>
            delete_flag = 0
            and cate_code = #{cateCode}
        </where>
    </select>
    <!--获取最大编码-->
    <select id="getMaxCode" resultType="string">
        select cate_code
        from room_category
        <where>
            delete_flag = 0
            and parent_id = #{parentId}
        </where>
        order by cate_code desc limit 1
    </select>
    <!--根据id获取编码-->
    <select id="getCodeById" parameterType="int" resultType="string">
        select cate_code
        from room_category
        <where>
            delete_flag = 0
            and id = #{id}
        </where>
    </select>
    <!--分页查询分类信息-->
    <select id="findDataForPage" resultType="com.example.room.entity.RoomCategory">
        select id,cate_code cateCode,cate_name catename,cate_desc cateDesc,status,parent_id parentId
        from room_category
        <where>
            delete_flag = 0
            <if test="null != queryString and '' != queryString">
                and cate_code like concat('%',#{queryString},'%') or cate_name like concat('%',#{queryString},'%')
            </if>
        </where>
        order by status asc ,cate_code asc
    </select>
    <!--根据不同级别过去分类-->
    <select id="getCategoryByQuery" resultType="com.example.room.entity.RoomCategory">
        select distinct r.id,r.cate_code cateCode,r.cate_name catename,r.cate_desc cateDesc,r.status,r.parent_id
        parentId
        from (
        select *
        from room_category bc
        where bc.parent_id in (
        select bc1.id
        from room_category bc1
        <where>
            bc1.parent_id = -1
            <if test="null != queryString and '' != queryString">
                and bc1.cate_code like concat('%',#{queryString},'%') or bc1.cate_name like
                concat('%',#{queryString},'%')
            </if>
        </where>
        )
        or ((bc.cate_name like concat('%',#{queryString},'%') or bc.cate_code like concat('%',#{queryString},'%'))
        and bc.parent_id = -1)
        union all
        select *
        from room_category bc2
        where bc2.id in (
        select bc3.parent_id
        from room_category bc3
        <where>
            bc3.parent_id != -1
            <if test="null != queryString and '' != queryString">
                and bc3.cate_code like concat('%',#{queryString},'%') or bc3.cate_name like
                concat('%',#{queryString},'%')
            </if>
        </where>
        )
        or ((bc2.cate_name like concat('%',#{queryString},'%') or bc2.cate_code like concat('%',#{queryString},'%'))
        and bc2.parent_id != -1)
        ) r
        where
        r.delete_flag = 0
        order by r.status asc,r.cate_code asc
    </select>
    <!--修改宿舍分类-->
    <update id="updateRoomCate" parameterType="com.example.room.entity.RoomCategory">
        update room_category
        <set>
            <if test="null != cateCode and '' != cateCode">
                cate_code = #{cateCode},
            </if>
            <if test="null != cateName and '' != cateName">
                cate_name = #{cateName},
            </if>
            <if test="null != cateDesc and '' != cateDesc">
                cate_desc = #{cateDesc},
            </if>
            <if test="null != updateTime">
                update_time = #{updateTime},
            </if>
            <if test="null != updateUser and '' != updateUser">
                update_user = #{updateUser},
            </if>
            <if test="null != status">
                status = #{status}
            </if>
        </set>
        <where>
            delete_flag = 0 and id = #{id}
        </where>
    </update>
    <!--通名称查询宿舍类别数据-->
    <select id="getCateByName" resultType="com.example.room.entity.RoomCategory">
        SELECT
        id,cate_name cateName,cate_code cateCode,status
        FROM room_category
        WHERE delete_flag = 0 and cate_name in
        <foreach collection="list" item="item" close=")" open="(" separator=",">
            #{item}
        </foreach>
    </select>
    <!--根据父类查子类数量-->
    <select id="findRoomByParent" resultType="int">
        select count(*)
        from room_category
        where delete_flag = 0 and status = 0 and parent_id = #{id}
    </select>
    <!--删除宿舍分类-->
    <update id="deleteRoomCate">
        update room_category
        set delete_flag = 1
        where id = #{id} or parent_id = #{id}
    </update>
</mapper>
