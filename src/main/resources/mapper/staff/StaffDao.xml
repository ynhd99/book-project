<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper   PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.example.room.dao.StaffDao">
    <!--分页查询宿管员信息-->
    <select id="getStaffForPage" resultType="com.example.room.entity.StaffInfo">
        select s.id,s.staff_name staffName,s.staff_code staffCode,s.staff_phone staffPhone,s.staff_sex
        staffSex,u.role_id roleId
        from staff s
        inner join user u on s.staff_code = u.user_name
        <where>
            s.delete_flag = 0
            <if test="null != queryString and '' != queryString">
                and s.staff_code like concat('%',#{queryString},'%') or s.staff_name like concat('%',#{queryString},'%')
            </if>
        </where>
        order by s.update_time desc,s.staff_code asc
    </select>
    <!--编辑宿管员信息-->
    <update id="updateStaff" parameterType="com.example.room.entity.StaffInfo">
        update staff
        <set>
            <if test="null != staffName and '' != staffName">
                staff_name = #{staffName},
            </if>
            <if test="null != staffCode and '' != staffCode">
                staff_code = #{staffCode},
            </if>
            <if test="null != staffPhone and '' != staffPhone">
                staff_phone = #{staffPhone},
            </if>
            <if test="null != staffSex and '' != staffSex">
                staff_sex = #{staffSex},
            </if>
            <if test="null != updateTime">
                update_time = #{updateTime},
            </if>
            <if test="null != updateUser and '' != updateUser">
                update_user = #{updateUser}
            </if>
        </set>
        <where>
            delete_flag = 0
            and id = #{id}
        </where>
    </update>
    <!--新增宿管员信息-->
    <insert id="addStaff" parameterType="com.example.room.entity.StaffInfo">
        insert into staff
        (
        id,
        staff_name,
        staff_code,
        staff_phone,
        staff_sex,
        create_time,
        create_user,
        update_time,
        update_user
        )values
        (
        #{id},
        #{staffName},
        #{staffCode},
        #{staffPhone},
        #{staffSex},
        #{createTime},
        #{createUser},
        #{updateTime},
        #{updateUser}
        )
    </insert>
    <!--删除宿管员信息-->
    <update id="deleteStaff">
        update staff
        set delete_flag =1
        where id = #{id}
    </update>
    <!--根据编码获取宿管员信息-->
    <select id="getDataByCode" resultType="com.example.room.entity.StaffInfo">
        select *
        from staff
        where delete_flag = 0 and staff_code = #{code}
    </select>
    <!--根据编码获取学生信息-->
    <select id="getDataByCodes" resultType="com.example.room.entity.StaffInfo">
        select id,staff_code staffCode,staff_name staffName
        from staff
        where delete_flag = 0 and staff_code in
        <foreach collection="list" item="item" close=")" open="(" separator=",">
            #{item}
        </foreach>
    </select>
    <!--批量删除宿管员-->
    <update id="batchDelete" parameterType="list">
        update staff
        set delete_flag = 1
        <where>
            id in
            <foreach close=")" collection="list" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </where>
    </update>
    <!--批量删除用户表-->
    <update id="batchDeleteUser" parameterType="list">
    update user u
    left join staff s on u.user_name = s.staff_code
    set u.delete_flag = 1
    <where>
        s.id in
        <foreach close=")" collection="list" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </where>
    </update>
    <!--新增宿管员信息-->
    <insert id="batchAddStaff" parameterType="com.example.room.entity.StaffInfo">
        insert into staff
        (
        id,
        staff_name,
        staff_code,
        staff_phone,
        staff_sex,
        create_time,
        create_user,
        update_time,
        update_user
        )values
        <foreach collection="list" item="item" index="index"
                 open="(" separator="),(" close=")">
        #{item.id},
        #{item.staffName},
        #{item.staffCode},
        #{item.staffPhone},
        #{item.staffSex},
        #{item.createTime},
        #{item.createUser},
        #{item.updateTime},
        #{item.updateUser}
        </foreach>
    </insert>
</mapper>