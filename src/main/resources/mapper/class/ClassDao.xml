<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.room.dao.ClassDao">
    <resultMap type="com.example.room.entity.ClassInfo" id="ClassMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="collegeId" column="college_id" jdbcType="VARCHAR"/>
        <result property="className" column="class_name" jdbcType="VARCHAR"/>
        <result property="classCode" column="class_code" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="createUser" column="create_user" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="updateUser" column="update_user" jdbcType="VARCHAR"/>
        <result property="deleteFlag" column="delete_flag" jdbcType="INTEGER"/>
    </resultMap>
    <!--新增班级管理数据-->
    <insert id="createClass" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO class
        (
        id,
        college_id,
        class_name,
        class_code,
        create_time,
        create_user,
        update_time,
        update_user
        )
        VALUES
        (
        #{id},
        #{collegeId},
        #{className},
        #{classCode},
        #{createTime},
        #{createUser},
        #{updateTime},
        #{updateUser}
        )
    </insert>
    <!--新增多条班级管理数据-->
    <insert id="createClasss" parameterType="List">
        INSERT INTO
        class
        (id,college_id,class_name,class_code,status,create_time,create_user,update_time,update_user,)
        VALUES
        <foreach collection="list" item="item" index="index"
                 separator=",">
            (#{item.id},#{item.collegeId},#{item.className},#{item.classCode},#{item.status},#{item.createTime},#{item.createUser},#{item.updateTime},#{item.updateUser},)
        </foreach>
    </insert>
    <!--更新班级管理数据-->
    <update id="updateClass">
        UPDATE class
        <set>
            <if test="null != collegeId and '' != collegeId">
                college_id = #{collegeId},
            </if>
            <if test="null != className and '' != className">
                class_name = #{className},
            </if>
            <if test="null != status">
                status = #{status},
            </if>
            <if test="null != updateTime">
                update_time = #{updateTime},
            </if>
            <if test="null != updateUser and '' != updateUser">
                update_user = #{updateUser},
            </if>
        </set>
        WHERE
        delete_flag = 0
        and id = #{id}
    </update>
    <!--删除班级管理数据-->
    <update id="deleteClass">
        UPDATE class
        <set>
            delete_flag = 1,
            <if test="updateUser != null and updateUser != ''">
                update_user = #{updateUser},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        WHERE id = #{id}
    </update>
    <!--通过ID查询单条班级管理数据-->
    <select id="getClass" resultMap="ClassMap">
        SELECT
        id,college_id,class_name,class_code,status,create_time,create_user,update_time,update_user,delete_flag        FROM class
        WHERE id = #{id} AND tenant_id = #{tenantId} AND delete_flag = 0
    </select>
    <!--根据条件查询班级管理数据-->
    <select id="getClassList" resultType="com.example.room.entity.ClassInfo">
        SELECT
        c.id,
        cg.college_name collegeName,
        c.class_name className,
        c.class_code classCode,
        c.status
        FROM class c
        INNER join college cg on c.college_id = cg.id
        <where>
            c.delete_flag = 0
            <if test="null != id and '' != id">
                and c.id = #{id}
            </if>
            <if test="null != collegeId and '' != collegeId">
                and cg.id = #{collegeId}
            </if>
            <if test="null != className and '' != className">
                and c.class_name = #{className}
            </if>
            <if test="null != classCode and '' != classCode">
                and c.class_code = #{classCode}
            </if>
            <if test="null != queryString and '' != queryString">
                and class_code like concat('%',#{queryString},'%') or class_name like concat('%',#{queryString},'%')
            </if>
            <if test="null != status ">
                and c.status = #{status}
            </if>
        </where>
        order by c.status asc,c.update_time desc
    </select>
    <!--根据编码获取班级信息-->
    <select id="getClassByCode" resultType="com.example.room.entity.ClassInfo">
        select *
        from class
        <where>
            delete_flag = 0
            and class_code = #{classCode}
        </where>
    </select>
    <!--通名称查询班级数据-->
    <select id="getClassByName" resultType="com.example.room.entity.ClassInfo">
        SELECT
        id,class_name,class_code,status
        FROM class
        WHERE delete_flag = 0 and class_name in
        <foreach collection="list" close=")" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </select>
</mapper>