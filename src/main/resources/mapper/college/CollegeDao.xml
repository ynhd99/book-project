<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper   PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.example.room.dao.CollegeDao">
    <!--新增学院信息-->
    <insert id="add" parameterType="com.example.room.entity.CollegeInfo">
        insert into college
        (
        id,
        college_code,
        college_name,
        create_time,
        create_user,
        update_time,
        update_user
        )values
        (
        #{id},
        #{collegeCode},
        #{collegeName},
        #{createTime},
        #{createUser},
        #{updateTime},
        #{updateUser}
        )
    </insert>
    <!--分页查询学院信息-->
    <select id="findDataForPage" resultType="com.example.room.entity.CollegeInfo">
        select id,college_name collegeName,college_code collegeCode,status
        from college
        <where>
            delete_flag = 0
            <if test="null != status">
                and status = #{status}
            </if>
            <if test="null != queryString and '' != queryString">
                and college_code like concat('%',#{queryString},'%') or college_name like concat('%',#{queryString},'%')
            </if>
        </where>
        order by status asc,college_code desc
    </select>
    <!--根据编码获取学院信息-->
    <select id="getDataByCode" parameterType="string" resultType="com.example.room.entity.CollegeInfo">
    select *
    from college
    where
        delete_flag = 0
        and college_code = #{code}
    </select>
    <!--更新学院状态-->
    <update id="updateStatus" parameterType="com.example.room.entity.CollegeInfo">
        update college
        <set>
            status = #{status},
            update_time = #{updateTime},
            update_user = #{updateUser}
        </set>
        <where>
            delete_flag = 0
            and id = #{id}
        </where>
    </update>
    <!--删除学院信息-->
    <update id="delete" parameterType="com.example.room.entity.CollegeInfo">
        update college
        <set>
            delete_flag = 1,
            update_time = #{updateTime},
            update_user = #{updateUser}
        </set>
        <where>
            id = #{id}
        </where>
    </update>
    <!--编辑学院信息-->
    <update id="update" parameterType="com.example.room.entity.CollegeInfo">
        update college
        <set>
            college_name = #{collegeName},
            update_time = #{updateTime},
            update_user = #{updateUser}
        </set>
        <where>
            delete_flag = 0
            and id = #{id}
        </where>
    </update>
    <!--分页查询学院信息-->
    <select id="getCollegeList" resultType="com.example.room.entity.CollegeInfo">
        select id,college_name collegeName,college_code collegeCode,status
        from college
        <where>
            delete_flag = 0
            and college_name in
            <foreach collection="list" item="item" close=")" open="(" separator=",">
                #{item}
            </foreach>
        </where>
        order by status asc,college_code desc
    </select>
</mapper>