<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper   PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.example.book.dao.BookCateDao">
    <!--新增图书分类信息-->
    <insert id="addBookCate">
        insert into book_category
        (
        id,
        cate_code,
        cate_name,
        cate_desc,
        parent_id,
        create_time,
        create_user,
        update_time,
        update_user
        )values
        (
        #{id},
        #{cateCode},
        #{cateName},
        #{cateDesc},
        #{parentId},
        #{createTime},
        #{createUser},
        #{updateTime},
        #{updateUser}
        )
    </insert>
    <!--根据编码获取分类信息-->
    <select id="getBookCateByCode" parameterType="string" resultType="int">
        select count(id)
        from book_category
        <where>
            delete_flag = 0
            and cate_code = #{cateCode}
        </where>
    </select>
    <!--获取最大编码-->
    <select id="getMaxCode" resultType="string">
        select cate_code
        from book_category
        <where>
            delete_flag = 0
            and parent_id = #{parentId}
        </where>
        order by cate_code desc limit 1
    </select>
    <!--根据id获取编码-->
    <select id="getCodeById" parameterType="int" resultType="string">
        select cate_code
        from book_category
        <where>
            delete_flag = 0
            and id = #{id}
        </where>
    </select>
    <!--分页查询分类信息-->
    <select id="findDataForPage" resultType="com.example.book.entity.BookCategory">
        select id,cate_code cateCode,cate_name catename,cate_desc cateDesc,status,parent_id parentId
        from book_category
        <where>
            delete_flag = 0
            <if test="null != queryString and '' != queryString">
                and cate_code like concat('%',#{queryString},'%') or cate_name like concat('%',#{queryString},'%')
            </if>
        </where>
        order by status asc ,update_time desc
    </select>
    <!--根据不同级别过去分类-->
    <select id="getCategoryByQuery" resultType="com.example.book.entity.BookCategory">
        select distinct r.id,r.cate_code cateCode,r.cate_name catename,r.cate_desc cateDesc,r.status,r.parent_id parentId
        from (
          select *
          from book_category bc
          where bc.parent_id in (
              select bc1.id
              from book_category bc1
              <where>
                  bc1.parent_id = -1
                  <if test="null != queryString and '' != queryString">
                  and bc1.cate_code like concat('%',#{queryString},'%') or bc1.cate_name like concat('%',#{queryString},'%')
                  </if>
              </where>
            )
          or ((bc.cate_name like concat('%',#{queryString},'%') or bc.cate_code like concat('%',#{queryString},'%'))
          and bc.parent_id = -1)
        union all
          select *
          from book_category bc2
          where bc2.id in (
              select bc3.parent_id
              from book_category bc3
        <where>
            bc3.parent_id != -1
            <if test="null != queryString and '' != queryString">
            and bc3.cate_code like concat('%',#{queryString},'%') or bc3.cate_name like concat('%',#{queryString},'%')
            </if>
        </where>
            )
          or ((bc2.cate_name like concat('%',#{queryString},'%') or bc2.cate_code like concat('%',#{queryString},'%'))
          and bc2.parent_id != -1)
        ) r
          where
          r.delete_flag = 0
          order by r.status asc,r.cate_code asc
    </select>
    <!--修改图书分类-->
    <update id="updateBookCate">
        update book_category
        <set>
            <if test="null != cateCode and '' != cateCode">
            cate_code = #{cateCode},
            </if>
            <if test="null != cateName and '' != cateName">
            cate_name = #{cateName},
            </if>
            <if test="null != cateDesc and '' != cateDesc">
                cate_desc = #{cateDesc},
            </if>
            <if test="null != updateTime">
            update_time = #{updateTime},
            </if>
            <if test="null != status and ''!= status">
                status = #{status},
            </if>
        </set>
        <where>
            delete_flag = 0
            and id = #{id}
        </where>
    </update>
</mapper>
